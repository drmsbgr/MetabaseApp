@{
    ViewData["Title"] = "Metabase";
}
@model MetabaseViewModel
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<div>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <h1 class="display-4">Yetkilendirme</h1>

    <p>Grafikleri görebilmek için yetkilendirilmiş olmanız gerekmektedir.</p>

    <form asp-action="Index" method="post">
        <div class="form-check">
            <input asp-for="IHaveToken" class="form-check-input" onchange="this.form.submit()" />
            <label asp-for="IHaveToken" class="form-check-label">Tokenim Var</label>
        </div>
    </form>

    @if (Model.IHaveToken)
    {
        <form asp-action="UseToken" method="post">
            <div class="form-group my-3">
                <label asp-for="Token">Token</label>
                <input asp-for="Token" required class="form-control">
            </div>
            <div class="form-group my-3">
                <button class="btn btn-primary" type="submit">Tokeni Kullan</button>
            </div>
        </form>
    }
    else
    {
        <form asp-action="Authorize" method="post">
            <div class="form-group my-3">
                <label asp-for="UserName">Kullanıcı Adı</label>
                <input asp-for="UserName" required class="form-control">
            </div>
            <div class="form-group my-3">
                <button class="btn btn-primary" type="submit">Token Oluştur</button>
            </div>
        </form>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}